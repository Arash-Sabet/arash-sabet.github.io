<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://sabet.dev/</id><title>Arash Sabet</title><subtitle>A veteran of the software industry and highly experienced in providing robust and cutting-edge Azure Cloud technology solutions.</subtitle> <updated>2021-03-25T07:46:22-04:00</updated> <author> <name>Arash Sabet</name> <uri>https://sabet.dev/</uri> </author><link rel="self" type="application/atom+xml" href="https://sabet.dev/feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://sabet.dev/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 Arash Sabet </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Securing daemon applications by Azure Ad B2C</title><link href="https://sabet.dev/posts/securing-daemon-apps-azure-ad-b2c/" rel="alternate" type="text/html" title="Securing daemon applications by Azure Ad B2C" /><published>2021-03-06T00:00:00-05:00</published> <updated>2021-03-25T07:45:07-04:00</updated> <id>https://sabet.dev/posts/securing-daemon-apps-azure-ad-b2c/</id> <content src="https://sabet.dev/posts/securing-daemon-apps-azure-ad-b2c/" /> <author> <name>Arash Sabet</name> </author> <category term="Security," /> <category term="Azure" /> <category term="AD" /> <category term="B2C" /> <summary> If you have stumbled upon this post, you have been likely exploring a solid way to secure your backend long-running processes to access a secured resource like a web API or an Azure Function. These applications can authenticate the application’s identity (not a user’s delegated identity) and by the OAuth 2.0 client credential flow. An example application Now, let’s take a look at an example a... </summary> </entry> <entry><title>Dependency Injection in xUnit test framework</title><link href="https://sabet.dev/posts/dependency-injection-in-xunit/" rel="alternate" type="text/html" title="Dependency Injection in xUnit test framework" /><published>2021-02-14T00:00:00-05:00</published> <updated>2021-03-25T07:45:07-04:00</updated> <id>https://sabet.dev/posts/dependency-injection-in-xunit/</id> <content src="https://sabet.dev/posts/dependency-injection-in-xunit/" /> <author> <name>Arash Sabet</name> </author> <category term="Testing," /> <category term="Xunit" /> <summary> There are certainly cases when developers want to run integration tests against their code wired up heavily by dependency injection. xUnit is a mature, loved-by-developers, and robust test framework for testing .net code. A slight downside of xUnit is that it lacks an out-of-the-box solution to inject dependencies. Fortunately, xUnit has been equipped with the “Fixture” feature, which is meant ... </summary> </entry> </feed>
